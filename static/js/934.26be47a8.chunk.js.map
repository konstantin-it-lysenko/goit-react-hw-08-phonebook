{"version":3,"file":"static/js/934.26be47a8.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","redux/filter/filterSelectors.js","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = ({ contacts }) => contacts.items;\nexport const selectLoading = ({ contacts }) => contacts.isLoading;\nexport const selectError = ({ contacts }) => contacts.error;\n","import styled from '@emotion/styled';\nimport Box from '@mui/material/Box';\n\nexport const StyledFormBox = styled(Box)`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 30px 20px;\n  border: 2px solid #fff;\n  border-radius: 16px;\n  background-color: #302f2f;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport { selectContacts } from '../../redux/contacts/contactsSelectors';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { StyledFormBox } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleContactSubmit = e => {\n    e.preventDefault();\n\n    const currentContact = { name, number };\n    const isDuplicate = contacts.find(\n      ({ name }) => name === currentContact.name\n    );\n    if (isDuplicate) return alert(`${name} already exists`);\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <StyledFormBox\n      onSubmit={handleContactSubmit}\n      component=\"form\"\n      autoComplete=\"off\"\n    >\n      <TextField\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        label=\"Name\"\n        inputProps={{\n          pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n          type: 'text',\n          minLength: 2,\n          maxLength: 32,\n        }}\n        required\n        InputProps={{\n          style: { color: 'white' },\n        }}\n        InputLabelProps={{\n          style: { color: 'white' },\n        }}\n      />\n\n      <TextField\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        label=\"Phone number\"\n        required\n        inputProps={{\n          pattern:\n            '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n          type: 'tel',\n          minLength: 10,\n        }}\n        InputProps={{\n          style: { color: 'white' },\n        }}\n        InputLabelProps={{\n          style: { color: 'white' },\n        }}\n      />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        sx={{\n          width: 300,\n          height: 50,\n        }}\n      >\n        Add contact\n      </Button>\n    </StyledFormBox>\n  );\n};\n\nexport default ContactForm;\n","export const selectFilterValue = ({ filter }) => filter.filter;\n","import styled from '@emotion/styled';\n\nexport const Contact = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 4px 12px;\n  background-color: #302f2f;\n  border-radius: 12px;\n`;\n\nexport const ContactName = styled.p`\n  font-size: 1.07rem;\n`;\n\nexport const Number = styled.span`\n  font-weight: 500;\n  color: #358df2;\n`;\n","import IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Contact, ContactName, Number } from './ContactItem.styled';\n\nconst ContactItem = ({ id, name, number, onDelete }) => {\n  return (\n    <Contact>\n      <ContactName>\n        {name}: <Number>{number}</Number>\n      </ContactName>\n      <IconButton\n        onClick={() => {\n          onDelete(id);\n        }}\n        size=\"large\"\n      >\n        <DeleteIcon fontSize=\"inherit\" style={{ fill: '#fff' }} />\n      </IconButton>\n    </Contact>\n  );\n};\n\nexport default ContactItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-bottom: 50px;\n  max-width: 344px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Oval\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      color=\"#4fa94d\"\n      ariaLabel=\"oval-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n    />\n  );\n};\n\nexport default Loader;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/contactsOperations';\nimport { deleteContact } from '../../redux/contacts/contactsOperations';\nimport {\n  selectContacts,\n  selectLoading,\n  selectError,\n} from '../../redux/contacts/contactsSelectors';\nimport { selectFilterValue } from '../../redux/filter/filterSelectors';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoading);\n  const isError = useSelector(selectError);\n  const filter = useSelector(selectFilterValue);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const filterContacts = () => {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    return contacts.filter(({ name }) => {\n      return name.toLowerCase().includes(normalizedFilter);\n    });\n  };\n\n  const filteredContacts = filterContacts();\n  const isListEmpty = !filteredContacts.length && !isLoading && !isError;\n\n  const deleteContactHandler = filterId => {\n    dispatch(deleteContact(filterId));\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {isListEmpty && <p>There are no contacts</p>}\n      {filteredContacts.length > 0 && (\n        <List>\n          {filteredContacts.map(({ id, name, number }) => {\n            return (\n              <ContactItem\n                key={id}\n                id={id}\n                name={name}\n                number={number}\n                onDelete={deleteContactHandler}\n              ></ContactItem>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\n\nexport const Container = styled.div`\n  margin-bottom: 30px;\n  width: 300px;\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  padding: 20px;\n  border: 2px solid #fff;\n  border-radius: 16px;\n  background-color: #302f2f;\n`;\n\nexport const Input = styled(TextField)`\n  min-width: 200px;\n  width: 100%;\n`;\n\nexport const Icon = styled(SearchIcon)`\n  fill: #fff;\n  width: 40px;\n  height: 40px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from '../../redux/filter/filterSlice';\nimport { selectFilterValue } from '../../redux/filter/filterSelectors';\nimport { nanoid } from 'nanoid';\nimport { Container, Icon, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilterValue);\n  const filterId = nanoid();\n\n  const filterInputHandler = e => {\n    const inputValue = e.target.value;\n\n    dispatch(updateFilter(inputValue));\n  };\n\n  return (\n    <Container>\n      <Input\n        type=\"text\"\n        value={filterValue}\n        id={filterId}\n        onChange={filterInputHandler}\n        label=\"Find contacts by name\"\n        InputProps={{\n          style: { color: 'white' },\n        }}\n        InputLabelProps={{\n          style: { color: 'white' },\n        }}\n      />\n      <Icon fontSize=\"inherit\" />\n    </Container>\n  );\n};\n\nexport default Filter;\n","import { useAuth } from 'hooks/useAuth';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Navigate } from 'react-router-dom';\n\nconst Contacts = () => {\n  const { isLoggedIn } = useAuth();\n  return (\n    <>\n      {isLoggedIn ? (\n        <>\n          <ContactForm />\n\n          <Filter />\n\n          <ContactList />\n        </>\n      ) : (\n        <Navigate to=\"/login\" />\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","_ref","contacts","items","selectLoading","_ref2","isLoading","selectError","_ref3","error","StyledFormBox","styled","Box","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","_e$currentTarget","currentTarget","value","reset","_jsxs","onSubmit","preventDefault","currentContact","find","alert","concat","addContact","component","autoComplete","children","_jsx","TextField","type","onChange","label","inputProps","pattern","minLength","maxLength","required","InputProps","style","color","InputLabelProps","Button","variant","sx","width","height","selectFilterValue","filter","Contact","ContactName","_templateObject2","Number","_templateObject3","id","onDelete","IconButton","onClick","size","DeleteIcon","fontSize","fill","List","Oval","visible","ariaLabel","wrapperStyle","wrapperClass","isError","useEffect","getContacts","filteredContacts","normalizedFilter","toLowerCase","trim","includes","filterContacts","isListEmpty","length","deleteContactHandler","filterId","deleteContact","_Fragment","Loader","map","ContactItem","Container","Input","Icon","SearchIcon","filterValue","nanoid","inputValue","target","updateFilter","isLoggedIn","useAuth","ContactForm","Filter","ContactList","Navigate","to"],"sourceRoot":""}